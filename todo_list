Type: bug, feature, task, refine, deleted
Severity: none, minor, moderate, major, critical

Tasks:
{{{ --------------------------------------------------

5. Refine README (refine,minor)

7. delete multi-tags (feature,minor)

8. Handle tag vs shell var conflict (bug,major)
	1. when new shell opening.
	2. set shell var name the same existing tag.
	3. run sw. => conflicted tag has now shell var and prompt warning. 
(should I check var content? If they are different then conflic....)
e.g.
		a. open terminal -> no sw shell vars now
		b. set a=123 as shell var and a is tag existing in sw
		c. run sw, shell vars will be created according to tags
		d. when create a, a is alread existing in shell -> error!!

another case
		a. user bob use sw then su to root
		b. now root wants to sw tag work, but it was used by bob -> work is alread existing in shell -> error!! Because they use the same shell environment.

solution:
		1. when sw create shell vars, when confliction appears, create only tag and warm the user.
		e.g.
		# sw
		(Warning! One conflic found.)
		run	/var/run
		*work	/opt/work

		=> *means shell var conflict and their value may be different

		2. when sw tag and get conflict, user can run sw tag -t (-t for tag only) to add path to tag.
		e.g.
		# sw work
		error
		# sw work -t /# sw -t work
		(Warning! One conflic found.)
		run	/var/run
		*work	/opt/work

So, it meaning the user have to use this tag carefully.

10. refine script install (need add more functions) (refine,minor)

12. sw can import/mirage another .sw file (i.e. copy e.g. jolin.sw to bob.sw). (feature,minor)
	case 1 for import
	$ sw -im <.sw file>
	sw will import tags from <.sw file>, your recent tag data will be deleted.
	Are you sure? [n/y]: y
	.....

	case 2 for mirage
	$ sw -mg <.sw file>
	sw will mirage <.sw file> to your xx.sw.
	Are you sure? [n/y]: y
	add tag1 /xxx/xxx .... ok
	add tag2 /xxx/xxx .... failed - tag already exists
	add tag3 /xxx/xxx .... failed - env var already exists <= can use flag -to (tag only) to add it
	add tag4 /xxx/xxx .... ok

	tag1 /xxxxx
	tag2 /xxxxx
	tag4 /xxxx
	otg1 /xxxx
	otg2 /xxx

15. Add message/note about g2w is tested/only run on bash. (refine,minor)

16. Need remove function. (feature,minor)
remove what? forget.... un-necessary functions?

17. Add version functions to gw. (refine,minor)

18. Need reload function (only once) for sw. (feature,major)
	E.g. I wan't to gw work but typo sw work, then I "sw -rb" (roll-back) work (tag) to original path.
	A. sw <tag name> -> click enter -> save this tag info (<tag name>,<path>) to ~/<user name>-tmp.sw -> do normal jobs
	B. sw -rb -> read <user name>-tmp.sw -> add tag back

19. Need Make file to automate the pkg creation. (task,minor)

23. sw output may add new column "note". (feature,minor)
	e.g.
	# sw foo -nt "folder saves pics"
	foo		/somewhere			"folder saves pics"
	(I am not sure if there must be 2 kinds of output with/without note column? First try with note to test if it's too noisy.)

24. sw path with level
	e.g.
	l1	/cygdrive
	l2	/cygdrive/c

	$ sw -l 2
	c	/cygdrive/c
	d	/cygdrive/d

	$ sw -l 3
	win	/cygdrive/c/windows
	tools	/cygdrive/d/tools

25. arrange the funcitons. open a new project (lfunc) to handle it.
	a.
	#function: show_usage
	#description: bla bla bla...
	#usage: nu show_usage
	#parameter: N/A
	#output: string to standard output
	#return: N/A
	#exit: no	<= or 0 for ok, 1 for error

	$ lfunc sw
	function: show_usage
	description: bla bla bla...
	usage: nu show_usage
	parameter: N/A
	output: string to standard output
	return: N/A
	exit: no	<= or 0 for ok, 1 for error
	----------------------------------------
	function: show_version
	description: bla bla bla...
	....
	parameter: version, the script version
	parameter: pkg_version, the package version

	b. lfunc -c sw		<= -c for check
	lfunc add #function: <function name> when it finds
	^<function name>() {

}}} --------------------------------------------------

Finished:
{{{ --------------------------------------------------

22. sw output only the path under dedicated tag. (feature,minor)
	e.g.
	$ sw -r
	opt     /opt
	tools   /opt/tools
	ckpkv   /opt/tools/ckpkv/work
	work    /opt/tools/g2w/work
	tmp     /tmp
	var     /var

	$ sw -r -u opt	<= no
	or just easy output by path, because when you use this function, you focuse on path.
	$ sw -u opt	<= yes
	opt     /opt
	tools   /opt/tools
	ckpkv   /opt/tools/ckpkv/work
	work    /opt/tools/g2w/work
- v4.0.13/2016.08.10

23. Huston, we got a problem again! sort -k will not work on Cygwin when there are more than one white space btw. columns. Need work around! (bug,major)
- v4.0.11/2016.08.09

20. Refine sw output, may restrict the char number of tag. (refine,minor)
	Use printf instead of 2 tabs
	e.g.
	bobchang        /cygdrive/c/Users/bobchang
	cnt65   /cygdrive/f/l3/lab/CentOS_65
	=>
	bchang		/cygdrive/c/Users/bobchang
	cnt65		/cygdrive/f/l3/lab/CentOS_65
- v4.0.10/2016.08.09

21. Can tag name include -, just not in the begining? (refine,minor)
	No, because - is invalid for shell var naming rule.

13. Can sort sw output by tag name or by path. (feature,minor)
- v4.0.9/2016.08.09

4. Info for first installation, recent terminal needs to source ~/.bashrc or log out then log in....(effect by next login) (refine,minor)
	e.g.
	you may manually add xxx in ~/.bashrc
	then exit terminal and re-enter again
	...
- v4.0.9/2016.08.09

1. can't update tag with new path -> break in check environment variable (bug,major)
- v4.0.3/2016.07.06

6. tag name include dash e.g. 'a-a' results error "tag name already exists in shell" (bug,major) - v4.0.3/2016.07.06

9. like vi :version, the user can see info where is his .sw file located. (refine,none) - v4.0.4/2016.07.07

3. move .sw file to ~/.sw?? (refine,minor) - v4.0.4/2016.07.07

14. Huston we got a problem! recently alias set in /etc/profile, but it will not affect in sub-shell, need to solve this problem. (bug,critical)
	=> need to change profile to /etc/bash.bashrc - v4.0.5/2016.07.27
	=> It is shxt that bash.bashrc is available for Cygwin but not CentOS
	=> I think the right way is to write the script in /etc/profile.d/.

2016.07.28
It is shit again that the g2w.sh doesn't work for Cygwin and CentOS/sh. I am confused... Really need to test these login script...sigh....
By the way, should I strict the usage only on bash? should be, because I only use it on bash.

So I have to modify script install
	1. check shell (which os?)
		$ uname -o
		Cygwin: Cygwin
		CentOS/Linux: GNU/Linux
	2. check file existance
		if [ -r $file ]
	3. copy g2w.sh to /etc/profile.d/
	4. please re-login....

2016.08.01
Ok, I think I fixed this bug. - v4.0.7/2016.08.01

}}} --------------------------------------------------

Deleted:
{{{ --------------------------------------------------

11. sw can use another .sw file. (deleted,none)
$ sw -f <.sw file>
2016.08.03 - seems it is not neccessary, because gw still read default .sw file, import is more useable.

}}} --------------------------------------------------

Note:
{{{ --------------------------------------------------
2016.08.08
I know, I need to arrange this todo list....when I'm free, sigh.

2016.08.01
It is shit that this project seems unendlich....sigh.

}}} --------------------------------------------------
