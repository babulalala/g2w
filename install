#!/bin/bash
#
# Script: install
# Description: Install script for package.
# Version: 1.1.2
# Date: 2017.11.02
# Update:
#	1.1.0	1. Refactor script.
#		2. Use library btools.
#		3. Add meta files to system for referance.
#		4. Ignore file in fileslist function.
#	1.1.1	1. Change dependency from btools to bfile.
#		2. Search bfile from package folder first, then system library.
#	1.1.2	1. Fix can't find bfile bug.
# Note:
#	- we need log system (1.2.0), when blog is ready.
#

this_folder=`dirname $0`
cd $this_folder

package_folder=`pwd`
package_name=`basename $package_folder`

#check dependency
#bfile
#find bfile in package folder
bfile_file=$package_folder/bfile

if [ ! -f $bfile_file ];then			#no bfile in package
	bfile_file=/usr/local/lib/blib/bfile		#find bfile in system library

	if [ ! -f $bfile_file ];then
		echo need $bfile_file
		exit 1
	fi
fi

. $bfile_file

#meta files: fileslsit, dependency
fileslist_file_name=fileslist
fileslist_file=$package_folder/$fileslist_file_name

dependency_file_name=dependency
dependency_file=$package_folder/$dependency_file_name

#rock'n roll
echo "Start to install package $package_name."
echo "Package folder is $package_folder."

#check meta files
echo "Check files and dependency:"
if check_file_existance $fileslist_file $dependency_file -f $dependency_file;then
	:	#ok, all exists
else
	echo "Failed, terminate the script."
	exit 1
fi

echo "Start to install package:"
filter_file "$fileslist_file" |while read file
do

	#clean up
	unset new_file_name old_file_name

	if echo "$file" |grep '^\[.*\]$' &>/dev/null;then
		dst_folder=`echo "$file"|sed 's/\[\|\]//g'`
		if [ ! -d $dst_folder ];then
			echo -n "folder $dst_folder doesn't exist, create it ... "
			if mkdir -p $dst_folder;then
				echo ok
			else
				echo failed
				echo Failed, terminate the script.
				exit 1
			fi
		fi
		continue
	fi

	#should we change the file name
	#example:
	# dependency={pkg_name}.dependency
	if echo "$file" |grep '=' &>/dev/null;then		#yes, need to change
		old_file_name=`echo "$file"|cut -d '=' -f 1`
		new_file_name=`echo "$file"|cut -d '=' -f 2`

		#substitution is needed
		new_file_name=`echo $new_file_name|sed "s/{pkg_name}/$package_name/g"`
	fi

	#prepare for copy
	if [ -z $old_file_name ];then
		old_file_name=$file
	fi

	if [ -z $new_file_name ];then
		new_file_name=$old_file_name
	fi

	echo -n "copy" $old_file_name "to $dst_folder as" $new_file_name ".... "

	#don't overwrite the file starts with *
	if echo "$file"|grep '^\*' &>/dev/null && [ -f $dst_folder/$new_file_name ];then	#file starts with *
		echo "exists, no overwrite"
		continue
	fi

	if cp $old_file_name $dst_folder/$new_file_name &>/dev/null;then
		echo ok
	else
		echo failed
	fi
done

# Post-installation #
# Add your script here.

echo
echo "$package_name is installed."

## End of Script ##
